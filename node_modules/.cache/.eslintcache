[{"C:\\project_with_Modification\\src\\index.js":"1","C:\\project_with_Modification\\src\\reportWebVitals.js":"2","C:\\project_with_Modification\\src\\App.js":"3","C:\\project_with_Modification\\src\\Components\\RechartLine.js":"4","C:\\project_with_Modification\\src\\Components\\RechartPie_one.js":"5","C:\\project_with_Modification\\src\\Components\\Footer.js":"6","C:\\project_with_Modification\\src\\Components\\Header.js":"7","C:\\project_with_Modification\\src\\Components\\RechartPie_final.js":"8","C:\\project_with_Modification\\src\\Components\\ReactWordCloud.js":"9","C:\\project_with_Modification\\src\\Components\\SunburstChart.js":"10","C:\\project_with_Modification\\src\\Components\\RechartPie_two.js":"11"},{"size":500,"mtime":1616179673950,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1616179673950,"results":"14","hashOfConfig":"13"},{"size":1259,"mtime":1617804725899,"results":"15","hashOfConfig":"13"},{"size":1621,"mtime":1616940361279,"results":"16","hashOfConfig":"13"},{"size":3311,"mtime":1616924007070,"results":"17","hashOfConfig":"13"},{"size":282,"mtime":1616534581190,"results":"18","hashOfConfig":"13"},{"size":883,"mtime":1616528552728,"results":"19","hashOfConfig":"13"},{"size":3690,"mtime":1616923977170,"results":"20","hashOfConfig":"13"},{"size":2380,"mtime":1616924223595,"results":"21","hashOfConfig":"13"},{"size":1676,"mtime":1617792250349,"results":"22","hashOfConfig":"13"},{"size":3376,"mtime":1616922852161,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bhketl",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"C:\\project_with_Modification\\src\\index.js",[],"C:\\project_with_Modification\\src\\reportWebVitals.js",[],"C:\\project_with_Modification\\src\\App.js",["49","50","51"],"// import logo from './logo.svg';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport RechartLine from './Components/RechartLine';\nimport RechartPie_one from './Components/RechartPie_one';\nimport RechartPie_two from './Components/RechartPie_two';\nimport RechartPie_final from './Components/RechartPie_final';\nimport ReactWordCloud from './Components/ReactWordCloud';\nimport SunburstChart from './Components/SunburstChart';\n\nfunction App() {\n  return (\n    <div className='App flex flex-col'>\n      <Header />\n\n      <div className='mt-20 bg-gray-100  h-4/5 w-full flex justify-evenly mr-0'>\n        <RechartLine />\n        <div className='flex flex-col justify-between h-4/5 w-6/12 -mt-2'>\n          <RechartPie_one />\n          <RechartPie_two />\n        </div>\n      </div>\n\n      <div className=\"bg-gray-100 flex w-10/12 h-11/12 mx-auto mt-10 mb-10 justify-between \">\n        <SunburstChart/>\n      </div>\n\n      <div className='bg-gray-100 py-4 h-4/5 w-4/5 mx-auto mb-16'>\n        <RechartPie_final />\n      </div>\n\n      <div className='bg-gray-100 flex w-10/12 h-screen mx-auto justify-between '>\n        <ReactWordCloud />\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\project_with_Modification\\src\\Components\\RechartLine.js",[],"C:\\project_with_Modification\\src\\Components\\RechartPie_one.js",[],"C:\\project_with_Modification\\src\\Components\\Footer.js",[],"C:\\project_with_Modification\\src\\Components\\Header.js",[],"C:\\project_with_Modification\\src\\Components\\RechartPie_final.js",["52"],"import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, ResponsiveContainer } from 'recharts';\r\n\r\nimport piefinaldata1 from '../assets/pi_final_in.json';\r\nimport piefinaldata2 from '../assets/pi_final_out.json';\r\n\r\nconst data01 = piefinaldata1;\r\nconst data02 = piefinaldata2;\r\n\r\nconst renderActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor='middle' fill={fill}>\r\n        {payload.groupVis}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill='#1C4E80'\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill='none'\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke='none' />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill='#333'\r\n      >\r\n        {payload.name} ({payload.value}){' '}\r\n      </text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill='#999'\r\n      >\r\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class RechartPie_final extends PureComponent {\r\n  state = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  onPieEnter = (_, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='w-full h-64 bg-white rounded-lg shadow-lg flex mt-4 transform hover:scale-105 transition ease-in-out duration-500'>\r\n          <p className='text-center text-blue-800 font-openSans font-bold m-auto pl-16 -mr-16'>\r\n            Sentiment Distribution for each of the Major Topic Groups\r\n          </p>\r\n          <ResponsiveContainer width='100%' height='100%' className='relative'>\r\n            <PieChart width={400} height={400}>\r\n              <Pie\r\n                activeIndex={this.state.activeIndex}\r\n                data={data01}\r\n                dataKey='value'\r\n                cx='50%'\r\n                cy='50%'\r\n                innerRadius={40}\r\n                outerRadius={60}\r\n                fill='#EA6A47'\r\n                onMouseEnter={this.onPieEnter}\r\n              />\r\n              <Pie\r\n                activeIndex={this.state.activeIndex}\r\n                data={data02}\r\n                activeShape={renderActiveShape}\r\n                dataKey='value'\r\n                cx='50%'\r\n                cy='50%'\r\n                innerRadius={65}\r\n                outerRadius={75}\r\n                fill='#1e40af'\r\n                onMouseEnter={this.onPieEnter}\r\n              />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\project_with_Modification\\src\\Components\\ReactWordCloud.js",[],"C:\\project_with_Modification\\src\\Components\\SunburstChart.js",[],"C:\\project_with_Modification\\src\\Components\\RechartPie_two.js",["53"],"import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, ResponsiveContainer } from 'recharts';\r\n\r\nimport pietwoData from '../assets/sentiment_pie_2.json';\r\n\r\nconst data = pietwoData;\r\n\r\nconst renderActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? 'start' : 'end';\r\n  const COLORS = ['#1C4E80', '#EA6A47', '#7E909A', '#202020'];\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor='middle' fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill='#1C4E80'\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill='none'\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke='none' />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill='#333'\r\n      >{`Tweets Count ${value}`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill='#999'\r\n      >\r\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default class RechartPie_two extends PureComponent {\r\n  static demoUrl =\r\n    'https://codesandbox.io/s/pie-chart-with-customized-active-shape-y93si';\r\n\r\n  state = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  onPieEnter = (_, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='w-full h-60 bg-white rounded-lg shadow-lg flex mt-4 transform hover:scale-105 transition ease-in-out duration-500'>\r\n          <p className='text-center text-blue-800 font-openSans font-bold m-auto pl-16 -mr-16'>\r\n            Sentiment Distribution of Tweets\r\n          </p>\r\n          <ResponsiveContainer width='100%' height='100%' className='relative'>\r\n            <PieChart width={400} height={400}>\r\n              <Pie\r\n                activeIndex={this.state.activeIndex}\r\n                activeShape={renderActiveShape}\r\n                data={data}\r\n                cx='50%'\r\n                cy='50%'\r\n                innerRadius={45}\r\n                outerRadius={65}\r\n                fill='#EA6A47'\r\n                dataKey='value'\r\n                paddingAngle={3}\r\n                onMouseEnter={this.onPieEnter}\r\n              />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"54","severity":1,"message":"55","line":20,"column":11,"nodeType":"56","endLine":20,"endColumn":29},{"ruleId":"54","severity":1,"message":"57","line":21,"column":11,"nodeType":"56","endLine":21,"endColumn":29},{"ruleId":"54","severity":1,"message":"58","line":30,"column":9,"nodeType":"56","endLine":30,"endColumn":29},{"ruleId":"59","severity":1,"message":"60","line":23,"column":5,"nodeType":"61","messageId":"62","endLine":23,"endColumn":10},{"ruleId":"59","severity":1,"message":"63","line":32,"column":9,"nodeType":"61","messageId":"62","endLine":32,"endColumn":15},"react/jsx-pascal-case","Imported JSX component RechartPie_one must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component RechartPie_two must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component RechartPie_final must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","'COLORS' is assigned a value but never used."]